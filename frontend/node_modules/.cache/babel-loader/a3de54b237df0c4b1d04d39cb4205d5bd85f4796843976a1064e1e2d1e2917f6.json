{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  productList: []\n  // cartItem: [],\n};\nexport const productSlice = createSlice({\n  name: \"product\",\n  initialState,\n  reducers: {\n    setDataProduct: (state, action) => {\n      console.log(action);\n      state.productList = [...action.payload];\n    }\n    // addCartItem: (state, action) => {\n    //   const check = state.cartItem.some((el) => el._id === action.payload._id);\n    //   if (check) {\n    //     toast(\"Already Item in Cart\");\n    //   } else {\n    //     toast(\"Item Add successfully\");\n    //     const total = action.payload.price;\n    //     state.cartItem = [\n    //       ...state.cartItem,\n    //       { ...action.payload, qty: 1, total: total },\n    //     ];\n    //   }\n    // },\n    // deleteCartItem: (state, action) => {\n    //   toast(\"one Item Delete\");\n    //   const index = state.cartItem.findIndex((el) => el._id === action.payload);\n    //   state.cartItem.splice(index, 1);\n    //   console.log(index);\n    // },\n    // increaseQty: (state, action) => {\n    //   const index = state.cartItem.findIndex((el) => el._id === action.payload);\n    //   let qty = state.cartItem[index].qty;\n    //   const qtyInc = ++qty;\n    //   state.cartItem[index].qty = qtyInc;\n\n    //   const price = state.cartItem[index].price;\n    //   const total = price * qtyInc;\n\n    //   state.cartItem[index].total = total;\n    // },\n    // decreaseQty: (state, action) => {\n    //   const index = state.cartItem.findIndex((el) => el._id === action.payload);\n    //   let qty = state.cartItem[index].qty;\n    //   if (qty > 1) {\n    //     const qtyDec = ++qty;\n    //     state.cartItem[index].qty = qtyDec;\n\n    //     const price = state.cartItem[index].price;\n    //     const total = price * qtyDec;\n\n    //     state.cartItem[index].total = total;\n    //   }\n    // },\n  }\n});\nexport const {\n  setDataProduct\n  // addCartItem,\n  // deleteCartItem,\n  // increaseQty,\n  // decreaseQty,\n} = productSlice.actions;\nexport default productSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","productList","productSlice","name","reducers","setDataProduct","state","action","console","log","payload","actions","reducer"],"sources":["C:/Users/jahna/Downloads/ECommerce/frontend/src/redux/productSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    productList: [],\r\n    // cartItem: [],\r\n  };\r\n\r\nexport const productSlice = createSlice({\r\n  name: \"product\",\r\n  initialState,\r\n  reducers: {\r\n    setDataProduct: (state, action) => {\r\n      console.log(action)\r\n      state.productList = [...action.payload];\r\n    },\r\n    // addCartItem: (state, action) => {\r\n    //   const check = state.cartItem.some((el) => el._id === action.payload._id);\r\n    //   if (check) {\r\n    //     toast(\"Already Item in Cart\");\r\n    //   } else {\r\n    //     toast(\"Item Add successfully\");\r\n    //     const total = action.payload.price;\r\n    //     state.cartItem = [\r\n    //       ...state.cartItem,\r\n    //       { ...action.payload, qty: 1, total: total },\r\n    //     ];\r\n    //   }\r\n    // },\r\n    // deleteCartItem: (state, action) => {\r\n    //   toast(\"one Item Delete\");\r\n    //   const index = state.cartItem.findIndex((el) => el._id === action.payload);\r\n    //   state.cartItem.splice(index, 1);\r\n    //   console.log(index);\r\n    // },\r\n    // increaseQty: (state, action) => {\r\n    //   const index = state.cartItem.findIndex((el) => el._id === action.payload);\r\n    //   let qty = state.cartItem[index].qty;\r\n    //   const qtyInc = ++qty;\r\n    //   state.cartItem[index].qty = qtyInc;\r\n\r\n    //   const price = state.cartItem[index].price;\r\n    //   const total = price * qtyInc;\r\n\r\n    //   state.cartItem[index].total = total;\r\n    // },\r\n    // decreaseQty: (state, action) => {\r\n    //   const index = state.cartItem.findIndex((el) => el._id === action.payload);\r\n    //   let qty = state.cartItem[index].qty;\r\n    //   if (qty > 1) {\r\n    //     const qtyDec = ++qty;\r\n    //     state.cartItem[index].qty = qtyDec;\r\n\r\n    //     const price = state.cartItem[index].price;\r\n    //     const total = price * qtyDec;\r\n\r\n    //     state.cartItem[index].total = total;\r\n    //   }\r\n    // },\r\n  },\r\n});\r\nexport const {\r\n    setDataProduct,\r\n    // addCartItem,\r\n    // deleteCartItem,\r\n    // increaseQty,\r\n    // decreaseQty,\r\n  } = productSlice.actions;\r\n  \r\n  export default productSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,WAAW,EAAE;EACb;AACF,CAAC;AAEH,OAAO,MAAMC,YAAY,GAAGH,WAAW,CAAC;EACtCI,IAAI,EAAE,SAAS;EACfH,YAAY;EACZI,QAAQ,EAAE;IACRC,cAAc,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACjCC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;MACnBD,KAAK,CAACL,WAAW,GAAG,CAAC,GAAGM,MAAM,CAACG,OAAO,CAAC;IACzC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;;IAEA;IACA;IACA;EACF;AACF,CAAC,CAAC;AACF,OAAO,MAAM;EACTL;EACA;EACA;EACA;EACA;AACF,CAAC,GAAGH,YAAY,CAACS,OAAO;AAExB,eAAeT,YAAY,CAACU,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}